# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        uses: docker/login-action@v1
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          

      - name: Build and push staging image
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        uses: docker/build-push-action@v3.1.1
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          tags: ${{ secrets.ACR_NAME }}/contoso-website:latest
          push: true
          
  deploy:
    runs-on: ubuntu-latest
    needs: build_push_image
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Helm tool installer
        uses: Azure/setup-helm@v3.3
        
      - name: Get AKS credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v3
        with:
          resource-group: 'mslearn-gh-pipelines-14912'
          cluster-name: 'contoso-video'
          
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
